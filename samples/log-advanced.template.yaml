AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Sample Template for CloudWatch Logs.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  RegionMap:
    us-east-2:
      AMI: ami-151d3b70
    us-west-1:
      AMI: ami-7aba833f
    us-west-2:
      AMI: ami-718c6909
    eu-west-1:
      AMI: ami-2918e35e
    ap-southeast-1:
      AMI: ami-b40d5ee6
    ap-southeast-2:
      AMI: ami-3b4bd301
    ap-northeast-1:
      AMI: ami-c9562fc8
    sa-east-1:
      AMI: ami-215dff3c
    eu-central-1:
      AMI: ami-a03503bd
Resources:
  LogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: LogRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:Create*
            - logs:PutLogEvents
#            - s3:GetObject
            Resource:
            - arn:aws:logs:*:*:*
#            - arn:aws:s3:::*
  LogRoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: LogRole
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
  WebServerHost:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a simple PHP application
    # CreationPolicy:
    #   ResourceSignal:
    #     Timeout: PT5M
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      KeyName:
        Ref: KeyName
      InstanceType: t2.micro
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      IamInstanceProfile:
        Ref: LogRoleInstanceProfile
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
            sudo mv /awslogs-agent-setup.py /home/ubuntu/
            cd /home/ubuntu
            echo -e "[general]\nstate_file = /var/awslogs/state/agent-state\n\n" > awslogconfigs.conf
            echo -e "[/var/log/syslog]\ndatetime_format = %Y-%m-%d %H:%M:%S\nfile = /var/log/syslog\nbuffer_duration = 5000\nlog_stream_name = {instance_id}-sys.log\ninitial_position = start_of_file\nlog_group_name = ${WSO2APIMLogGroup}" >> awslogconfigs.conf
            echo -e "[/var/log/kern.log]\ndatetime_format = %b %d %H:%M:%S\nfile = /var/log/kern.log\nbuffer_duration = 5000\nlog_stream_name = {instance_id}-kern.log.log\ninitial_position = start_of_file\nlog_group_name = ${WSO2APIMLogGroup}" >> awslogconfigs.conf
            echo -e "[/var/log/cloud-init.log]\nfile = /var/log/cloud-init.log\nbuffer_duration = 5000\nlog_stream_name = {instance_id}-cloud-init.log\ninitial_position = start_of_file\nlog_group_name = ${WSO2APIMLogGroup}" >> awslogconfigs.conf
            sudo python ./awslogs-agent-setup.py --region ${AWS::Region} --configfile=/home/ubuntu/awslogconfigs.conf -n true
            sudo /etc/init.d/awslogs stop
            sudo /etc/init.d/awslogs start
  WSO2APIMLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: WSO2-APIM-Node1
      RetentionInDays: 7
